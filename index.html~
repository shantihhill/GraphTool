<!DOCTYPE html>

<html>
<head>
	
<title> Graph Tool </title>
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<link rel="stylesheet" href="style.css"/>
<script src="jquery-3.5.1.js"></script>

</head>

<body>

<header>
	<p style="text-align:center;font-size:3vw;color:white;">Graph Tool<p>
</header> 
<div class="mainBody"> 
	<div class="centerBody">
		<div class="commands">
			<div class="buttonGroupComm">
				<button class="buttonComm" type="button" onclick="selectGravity()"> Gravity </button>		
				<button class="buttonComm" type="button" onclick="selectEdit()"> Edit </button>	
				<button class="buttonComm" type="button" onclick="selectDraw()"> Draw </button>		
				<button class="buttonComm" type="button" onclick="selectDelete()"> Delete </button>		
			</div>
			<div class="buttonGroupComm">
				<button class="buttonComm" type="button" onclick="makeDirected()"> Directed </button>		
				<button class="buttonComm" type="button" onclick="makeUndirected()"> Uniderected </button>		
			</div>
			<div class="buttonGroupComm">
				<button class="buttonComm" type="button" onclick="fixAll()"> Fix all </button>		
				<button class="buttonComm" type="button" onclick="unfixAll()"> Unfix all </button>		
			</div>
			<div class="buttonGroupComm">
				<button class="buttonComm" type="button" onclick="selectPaths()"> Paths </button>		
				<button class="buttonComm" type="button" onclick="selectHighLight()"> Highlight </button>		
				<button class="buttonComm" type="button" onclick="selectSort()"> Sort </button>		
				<button class="buttonComm" type="button" onclick="selectConfig()"> Config </button>		
			</div>	
		</div>

		<div class="makeGraph">
			<label class="configInput" for="nodeCount">Node count:</label>
			<br>
			<input type="number" class="configInput" style="font-size:1.5vw" id="nodeCount">
			<br>
			<label class="configInput" for="graphData">Graph data:</label>
			<br>
			<textarea id="graphData" class="graphData" wrap="off" id="graphData" onkeyup="updateGraphData()">1 2 
1 3 
1 4 
4 5 
5 6 
6 7 
7 4 
6 8 
</textarea>
		</div>

		<div class="viewGraph">
			<input type="text" id="inputBox" class="canvasInput hidden" onkeyup="hitEnterEsc(event)">
			<canvas id="myCanvas" onmousemove="updateMousePos(event)" onclick="mouseUp()" onmousedown="mouseDown()" onmouseleave="mouseLeaveCnv()">
			</canvas>
		</div>

		<div class="pathGraph">
			<div class="infoBox">
				
				<div class="gravityTab" id="gravityTab">
					<h3> Gravity Mode </h3>	
					<p class="p75Br"></p>
					<p> In gravity mode, nodes react to different forces, acting like objects in space. Every node is attracted to the center, while being repelled by other vertices. Edges act like springs, aiming for an ideal length, affecting the adjacent nodes.
					</p>
					<p class="p75Br"></p>
					<p> Ways to interact with the graph: </p>
					<p class="p75Br"></p>
					<ul>
						<li> Drag and Drop nodes in canvas.</li>	
						<li> Click to fix/unfix a nodes position.</li>
					</ul>
				</div>

				<div class="editTab hidden" id="editTab">
					<h3> Edit Mode </h3>
					<p class="p75Br"></p>
					<p> In edit mode, you can easily change a nodes or edges label. Click on a node/edge and start typing the new value. Hit Enter or Esc or click somewhere else in order to process the input.</p>
					<p class="p75Br"></p>
					<p> Ways to interact with the graph: </p>
					<p class="p75Br"></p>
					<ul>
						<li> Click on node to modify </li>
						<li> Click on edge to modify </li>
				</div>

				<div class="drawTab hidden" id="drawTab">
					<h3> Draw Mode </h3>
					<p class="p75Br"></p>
					<p> In draw mode, you can make changes to the graph by drawing new edges and adding new nodes. </p>
					<p class="p75Br"></p>
					<p> Ways to interact with the graph: </p>
					<p class="p75Br"></p>
					<ul>
						<li> Click on the canvas to add new node. </li>
						<li> Click a node followed by another node to draw a new edge. </li>
					<ul>
				</div>

				<div class="deleteTab hidden" id="deleteTab">
					<h3> Delete Mode </h3>
					<p class="p75Br"></p>
					<p> In delete mode, you can make changes to the graph by deleting edges or nodes by clicking on them. </p>
					<p class="p75Br"></p>
					<p> Ways to interact with the graph: </p>
					<p class="p75Br"></p>
					<ul>
						<li> Click on a node to delete the node and adjiacent edges. </li>
						<li> Click on a edge to delete it. </li>
					</ul>
				</div>

				<div class="pathTab hidden" id="pathTab">
					<h3> Pathing Tab </h3>	
					<p class="p75Br"></p>
					<p>The following functions will display classic search algorithms. Select the algorithm and the root for every connected component. For Maximum Flow choose a source and destination.</p>
					<div class="buttonGroupInfo" style="float:left;width:auto;">
						<button class="buttonInfo" type="button" style="width:auto;float:left;" onclick="addRandomLengths()"> Add lengths </button>		
						<button class="buttonInfo" type="button" style="width:auto;float:left;" onclick="removeRandomLengths()"> Remove lengths </button>
					</div>
					<br>
					<br>
					<p class="halfBr"></p>
					<p> Lenght status: <span id="lengthStatus"></span></p>
					<div class="buttonGroupInfo" style="float:none;">
						<button class="buttonInfo" type="button" onclick="pathBFS()"> Breath-First-Search </button>		
					</div>
					<div class="buttonGroupInfo" style="float:none;">
						<button class="buttonInfo" type="button" onclick="pathDFS()"> Depth-First-Search </button>		
					</div>
					<p class="halfBr"></p>
					<p> Lenght status: <span id="lengthStatus2"></span></p>
					<div class="buttonGroupInfo" style="float:none;">
						<button class="buttonInfo" type="button" onclick="pathDJK()"> Dijkstra's Algorithm </button>		
					</div>
					<div class="buttonGroupInfo" style="float:none;">
						<button class="buttonInfo" type="button" onclick="pathMF()"> Maximum Flow Algorithm </button>		
					</div>
					<p class="halfBr"></p>
					<div class="buttonGroupPlayer">
						<button class="buttonPlayer" type="button" onclick="undoOp()"> Undo </button>
						<button class="buttonPlayer" id="playButt" type="button" onclick="butPlayPause()">Pause</button>
					</div>
					<p class="halfBr"></p>
					<label for="myRange" style="font-size:1.05vw; margin-left:1vw;">Path speed: </label>
					<br>
					<p class="halfBr"></p>
					<input type="range" min="0" max="100" value="25" style="width:10vw;margin-left:1vw;float:left;" id="myRange" oninput="setFrameRate()">
				</div>

				<div class="highlightTab hidden" id="highlightTab">
					<h3> Highlight tab </h3>
					<div class="buttonGroupInfo">
						<button class="buttonInfo" type="button" onclick="edgeColorReset()"> Reset edge color </button>		
					</div>
					<p class="halfBr"></p>
					<p> The following functions will highlight Bridge edges, Connected components, Biconnected components. Each color represents a different set. Also, the graph must be undirected. Be aware that repeated edges count twice.</p>
					<p> Directed status: <span id="directedStatus2"></span></p>
					<div class="buttonGroupInfo">
						<button class="buttonInfo" type="button" onclick="highBridgeEdges()"> Bridge edges </button>		
					</div>
					<div class="buttonGroupInfo">
						<button class="buttonInfo" type="button" onclick="highConnComp()"> Connected components </button>		
					</div>	
					<div class="buttonGroupInfo">
						<button class="buttonInfo" type="button" onclick="highBiconnComp()"> Biconnected components </button>		
					</div>
					<p class="halfBr"></p>
					<p> The following function highlights the strongly connected components of a directed graph.</p>
					<p> Directed status: <span id="directedStatus3"></span></p>
					<div class="buttonGroupInfo">
						<button class="buttonInfo" type="button" onclick="highStrongConn()"> Strongly connected components </button>
					</div>
				</div>

				<div class="sortTab hidden" id="sortTab">
					<h3> Sortation Tab </h3>
					<p class="p75Br"></p>
					<p>The Tree funtion will sort your graph in the shape of a tree. Cycles are not allowed in a Tree. </p>
					<p> Cycle status: <span id="cycleStatus4"></span></p>
					<div class="buttonGroupInfo">
						<button class="buttonInfo" type="button" onclick="sortTree()"> Tree </button>		
					</div>
					<p class="halfBr"></p>
					<p>The Shuffle funtion will sort your graph in an randomized order. </p>
					<div class="buttonGroupInfo">
						<button class="buttonInfo" type="button" onclick="sortShuffle()"> Shuffle </button>	
					</div>	
					<p class="halfBr"></p>
					<p> The Topological sort function will sort your graph in topological order. The graph must be directed and without cycles. </p>		
					<p class="halfBr"></p>
					<p> Cycle status: <span id="cycleStatus"></span></p>
					<p> Directed status: <span id="directedStatus"></span></p>
					<div class="buttonGroupInfo">
						<button class="buttonInfo" type="button" onclick="sortTopological()"> Topological sort </button>	
					</div>
				</div>

				<div class="configTab hidden" id="configTab">
					<h3> Configuration tab </h3>
					<p class="p75Br"></p>
					<label class="configInput" for="nodeSize">Node size:</label>											
					<input type="text" id="nodeSize" class="configInput" value="30" onkeyup="updateNodeSize()">
					<br>
					<p class="halfBr"></p>
					<label class="configInput" for="edgeLength">Edge length</label>											
					<input type="text" id="edgeLength" class="configInput" value="150" onkeyup="updateEdgeIdealLength()" >
					<br>
					<p class="halfBr"></p>
					<label class="configInput" for="nodeBackColor">Node background color:</label>
					<select class="configSelect" id="nodeBackColor" value="white">
						<option value="White">White</option>
						<option value="Black">Black</option>	
						<option value="Red">Red</option>	
						<option value="Orange">Orange</option>	
						<option value="Yellow">Yellow</option>	
						<option value="Green">Green</option>	
						<option value="Blue">Blue</option>	
						<option value="Violet">Violet</option>	
					</select>	
					<br>
					<p class="halfBr"></p>
					<label class="configInput" for="nodeColor">Node color:</label>
					<select name="nodeColor" id="nodeColor">
						<option value="Black">Black</option>	
						<option value="White">White</option>
						<option value="Red">Red</option>	
						<option value="Orange">Orange</option>	
						<option value="Yellow">Yellow</option>	
						<option value="Green">Green</option>	
						<option value="Blue">Blue</option>	
						<option value="Violet">Violet</option>	
					</select>	
				</div>	
			</div>	
		</div>
</div>

<footer></footer>

<script src="script.js"></script>

</body>
</html> 

